<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>tuner</artifactId>
        <groupId>pl.piotrsukiennik</groupId>
        <version>2.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <version>2.1-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>
    <groupId>pl.piotrsukiennik.tuner</groupId>
    <artifactId>core</artifactId>
    <packaging>jar</packaging>
    <name>jSQLtuner :: core</name>
    <properties>
        <jsqltuner.method>aop</jsqltuner.method>
        <jsqltuner.build.directory>../</jsqltuner.build.directory>


        <!--jSQLtuner : service : blank -->
        <jsqltuner.service.impl.artifactId>service-blank-impl</jsqltuner.service.impl.artifactId>


        <!--jSQLtuner : test : db : h2-->
        <jsqltuner.test.jdbc.import>import-sql/import_mock_data.sql</jsqltuner.test.jdbc.import>
        <jsqltuner.test.jdbc.schema>jsqltunertest</jsqltuner.test.jdbc.schema>
        <jsqltuner.test.jdbc.url>jdbc:h2:target/db/${jsqltuner.test.jdbc.schema}</jsqltuner.test.jdbc.url>
        <jsqltuner.test.jdbc.driver>org.h2.Driver</jsqltuner.test.jdbc.driver>
        <jsqltuner.test.jdbc.username>sa</jsqltuner.test.jdbc.username>
        <jsqltuner.test.jdbc.password/>
        <jsqltuner.test.hibernate.dialect>org.hibernate.dialect.H2Dialect</jsqltuner.test.hibernate.dialect>
        <jsqltuner.test.dep.jdbc.groupId>com.h2database</jsqltuner.test.dep.jdbc.groupId>
        <jsqltuner.test.dep.jdbc.artifactId>h2</jsqltuner.test.dep.jdbc.artifactId>
        <jsqltuner.test.dep.jdbc.version>${h2.version}</jsqltuner.test.dep.jdbc.version>
    </properties>
    <profiles>
        <profile>
            <!-- Services saving query model and executions -->
            <id>services-persistent</id>
            <properties>
                <jsqltuner.service.impl.artifactId>service-db-impl</jsqltuner.service.impl.artifactId>
            </properties>
        </profile>
        <profile>
            <id>datasource-wrapper</id>
            <properties>
                <jsqltuner.method>wrapper</jsqltuner.method>
            </properties>
        </profile>
        <profile>
            <id>test-db-mysql</id>
            <properties>
                <jsqltuner.test.jdbc.import>import-sql/import_mock_data.sql</jsqltuner.test.jdbc.import>
                <jsqltuner.test.jdbc.schema>jsqltunertest</jsqltuner.test.jdbc.schema>
                <jsqltuner.test.jdbc.url>jdbc:mysql://localhost:3306/${jsqltuner.test.jdbc.schema}
                </jsqltuner.test.jdbc.url>
                <jsqltuner.test.jdbc.driver>com.mysql.jdbc.Driver</jsqltuner.test.jdbc.driver>
                <jsqltuner.test.jdbc.username>jsqltunertest</jsqltuner.test.jdbc.username>
                <jsqltuner.test.jdbc.password>jsqltunertest</jsqltuner.test.jdbc.password>
                <jsqltuner.test.hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</jsqltuner.test.hibernate.dialect>
                <jsqltuner.test.dep.jdbc.groupId>mysql</jsqltuner.test.dep.jdbc.groupId>
                <jsqltuner.test.dep.jdbc.artifactId>mysql-connector-java</jsqltuner.test.dep.jdbc.artifactId>
                <jsqltuner.test.dep.jdbc.version>5.1.9</jsqltuner.test.dep.jdbc.version>
            </properties>
        </profile>
        <profile>
            <id>test-benchmarks</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>**/*Benchmark.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/*Test.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources/</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
    </build>
    <repositories>
        <repository>
            <id>sonatype-nexus-public</id>
            <name>SonaType public snapshots and releases repository</name>
            <url>https://oss.sonatype.org/content/groups/public</url>
            <releases>
                <!-- set to true if you wish to fetch releases from this repo too. -->
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spy</id>
            <name>Spy Repository</name>
            <layout>default</layout>
            <url>http://files.couchbase.com/maven2/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <groupId>pl.piotrsukiennik.tuner</groupId>
            <artifactId>service</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>pl.piotrsukiennik.tuner</groupId>
            <artifactId>${jsqltuner.service.impl.artifactId}</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
        <groupId>pl.piotrsukiennik.tuner.parser</groupId>
            <artifactId>parser-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>pl.piotrsukiennik.tuner.parser</groupId>
            <artifactId>parser-impl</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>pl.piotrsukiennik.tuner</groupId>
            <artifactId>api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>pl.piotrsukiennik.tuner</groupId>
            <artifactId>model</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.carrotsearch</groupId>
            <artifactId>junit-benchmarks</artifactId>
            <version>0.7.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.7.2</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
        </dependency>

        <!--Memcached-->
        <dependency>
            <groupId>spy</groupId>
            <artifactId>spymemcached</artifactId>
            <version>2.8.1</version>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${jsqltuner.test.dep.jdbc.groupId}</groupId>
            <artifactId>${jsqltuner.test.dep.jdbc.artifactId}</artifactId>
            <version>${jsqltuner.test.dep.jdbc.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
    </dependencies>

</project>
